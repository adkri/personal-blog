<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tags on Amit Adhikari λ=</title>
    <link>/tags/</link>
    <description>Recent content in Tags on Amit Adhikari λ=</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/adkri&#34;&gt;Amit Adhikari&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Sun, 05 Apr 2020 13:38:56 -0400</lastBuildDate>
    
	<atom:link href="/tags/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>Optimizing for Cache Lines</title>
      <link>/posts/Optimizing-for-Cache-Lines/</link>
      <pubDate>Sun, 05 Apr 2020 13:38:56 -0400</pubDate>
      
      <guid>/posts/Optimizing-for-Cache-Lines/</guid>
      <description>In this post, we will see how we can write code optimized for cpu cache lines. If this topic is new to you, this post should be a good introduction. I do not dive into much details but will exaplain with some examples.
So recently I have been learning about designing data systems, and the first things I learned about were data structures. In these articles the common theme was designing structures while thinking about how they were going to be accessed, and in all of them I heard about cache lines.</description>
    </item>
    
    
    
    <item>
      <title>Writing LRU Cache in C</title>
      <link>/posts/writing-lru-cache-in-c/</link>
      <pubDate>Wed, 13 Mar 2019 18:30:56 -0400</pubDate>
      
      <guid>/posts/writing-lru-cache-in-c/</guid>
      <description>In this post we will discuss the process of creating a Least Recently Used(LRU) cache structure in C. The Least Recently Used policy is very common model to create caching structures in computers.
The LRU cache eviction policy is as simple as it sounds. It describes the eviction strategy of data in a cache, in this case, if the cache requires to evict data it will evict the least recently used item.</description>
    </item>
    
    
    
    
  </channel>
</rss>
